// $Id: $
// File name:   t_shift_register.sv
// Created:     4/14/2018
// Author:      Kendrick Lau
// Lab Section: 337-02
// Version:     1.0  Initial Design Entry
// Description: Shift Register Block

module t_shift_register
(
	input wire clk,
	input wire n_rst,
	input wire sync_shift_enable,
	input wire pid_shift_enable,
	input wire crc5_shift_enable,
	input wire crc16_shift_enable,
	input wire data_shift_enable,
	input wire sync_load_enable,
	input wire pid_load_enable,
	input wire crc5_load_enable,
	input wire crc16_load_enable,
	input wire data_load_enable,
	input wire [7:0] trans_sync,
	input wire [7:0] trans_pid,
	input wire [4:0] trans_crc5,
	input wire [15:0] trans_crc16,
	input wire [63:0] trans_data,
	output wire d_orig
);

	flex_pts_sr #(.NUM_BITS(8), .SHIFT_MSB(0)) sync_shift_reg (.clk(clk), .n_rst(n_rst), .load_enable(sync_load_enable), .shift_enable(sync_shift_enable), .parallel_in(trans_sync), .serial_out(d_orig));
	flex_pts_sr #(.NUM_BITS(8), .SHIFT_MSB(0)) pid_shift_reg (.clk(clk), .n_rst(n_rst), .load_enable(pid_load_enable), .shift_enable(pid_shift_enable), .parallel_in(trans_pid), .serial_out(d_orig));
	flex_pts_sr #(.NUM_BITS(5), .SHIFT_MSB(0)) crc5_shift_reg (.clk(clk), .n_rst(n_rst), .load_enable(crc5_load_enable), .shift_enable(crc5_shift_enable), .parallel_in(trans_crc5), .serial_out(d_orig));
	flex_pts_sr #(.NUM_BITS(16), .SHIFT_MSB(0)) crc16_shift_reg (.clk(clk), .n_rst(n_rst), .load_enable(crc16_load_enable), .shift_enable(crc16_shift_enable), .parallel_in(trans_crc16), .serial_out(d_orig));
	flex_pts_sr #(.NUM_BITS(64), .SHIFT_MSB(0)) data_shift_reg (.clk(clk), .n_rst(n_rst), .load_enable(data_load_enable), .shift_enable(data_shift_enable), .parallel_in(trans_data), .serial_out(d_orig));

endmodule
